{
    "id": "406f4a5c-0823-4881-87cd-008b5aa90bc5",
    "name": "update-assembly-info",
    "friendlyName": "Update Assembly Info",
    "description": "Update assembly info",
    "helpMarkDown": "",
    "category": "Utility",
    "author": "Bool (by Sigma)",
    "version": {
        "Major": 0,
        "Minor": 0,
        "Patch": 1
    },
    "instanceNameFormat": "Update Assembly: $(assemblyInfoFiles)","groups": [
        {
            "name": "fileVersion",
            "displayName": "File Version",
            "isExpanded": true
        }
    ],
    "inputs": [
        {
            "name": "assemblyInfoFiles",
            "type": "filePath",
            "label": "Assembly Info",
            "defaultValue": "**\\AssemblyInfo.*",
            "required": true,
            "helpMarkDown": "Relative path from repo root of the assembly info file(s). Variables and  wildcards can be used. For example, <code>$(Build.SourcesDirectory)</code> or <code>\\*\\*\\AssemblyInfo.\\*</code> for all AssemblyInfo.* files in all sub folders."
        },
        {
            "name": "description",
            "type": "string",
            "label": "Description",
            "defaultValue": "Build: $(Build.BuildNumber) - Commit: $(Build.SourceVersion)",
            "required": false,
            "helpMarkDown": "Left blank, the value is not updated. Variables can be used, eg. <code>$(Build.BuildNumber)</code>."
        },
        {
            "name": "configuration",
            "type": "string",
            "label": "Configuration",
            "defaultValue": "$(BuildConfiguration)",
            "required": false,
            "helpMarkDown": "Left blank, the value is not updated. Variables can be used, eg. <code>$(BuildConfiguration)</code>."
        },
        {
            "name": "company",
            "type": "string",
            "label": "Company",
            "defaultValue": "",
            "required": false,
            "helpMarkDown": "Left blank, the value is not updated. Variables can be used."
        },
        {
            "name": "product",
            "type": "string",
            "label": "Product",
            "defaultValue": "",
            "required": false,
            "helpMarkDown": "Left blank, the value is not updated. Variables can be used"
        },
        {
            "name": "copyright",
            "type": "string",
            "label": "Copyright",
            "defaultValue": "Copyright © $(Company) $(Year)",
            "required": false,
            "helpMarkDown": "Left blank, the value is not updated. Variables can be used. The value provided for \"Company\" can be inserted using variable <code>$(Company)</code>. The current year can be inserted using variable <code>$(Year)</code>. Used togeather this could produce \"Copyright © YourCompanyName 2017\"."
        },
        {
            "name": "fileVersionMajor",
            "type": "string",
            "label": "Major",
            "defaultValue": "",
            "required": false,
            "helpMarkDown": "Left blank, the value is not updated. Variables can be used, eg. <code>$(Build.SourceVersion)</code> or <code>$(Build.BuildId)</code>.",
            "groupName": "fileVersion"
        },
        {
            "name": "fileVersionMinor",
            "type": "string",
            "label": "Minor",
            "defaultValue": "",
            "required": false,
            "helpMarkDown": "Left blank, the value is not updated. Variables can be used, eg. <code>$(Build.SourceVersion)</code> or <code>$(Build.BuildId)</code>.",
            "groupName": "fileVersion"
        },
        {
            "name": "fileVersionBuild",
            "type": "string",
            "label": "Build",
            "defaultValue": "",
            "required": false,
            "helpMarkDown": "Left blank, the value is not updated. Variables can be used, eg. <code>$(Build.SourceVersion)</code> or <code>$(Build.BuildId)</code>.",
            "groupName": "fileVersion"
        },
        {
            "name": "fileVersionRevision",
            "type": "string",
            "label": "Revision",
            "defaultValue": "$(Build.SourceVersion)",
            "required": false,
            "helpMarkDown": "Left blank, the value is not updated. Variables can be used, eg. <code>$(Build.SourceVersion)</code> or <code>$(Build.BuildId)</code>.",
            "groupName": "fileVersion"
        }
    ],
    "execution": {
        "PowerShell": {
            "target": "$(currentDirectory)\\update.ps1",
            "argumentFormat": "",
            "workingDirectory": "$(currentDirectory)"
        }
    }
}